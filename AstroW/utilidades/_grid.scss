@use 'sass:math';
@use 'breakpoints' as *;


$grid-columns: 12;

$gap-map: (
  "0": 0,
  "1": 0.25rem,
  "2": 0.5rem,
  "3": 0.75rem,
  "4": 1rem,
  "5": 1.5rem,
  "6": 3rem,
  "auto": auto,
  ) !default;

$gap-atajos: (
  "gap": "g",
  ) !default;


//para general las clases con la propiedad gap
@each $propiedad, $atajo in $gap-atajos {
  @each $key, $value in $gap-map {

    .#{$atajo}-#{$key} {
      #{$propiedad}: #{$value};

    }

  }
}


//soporte para grid

//grid container
.grid {
  display: grid;
  gap: 0.5rem; // gap base, se puede sobreescribir con clases
}

@mixin generar-grid-classes($prefix: "") {
  // columns
  @for $i from 1 through $grid-columns {
    .#{$prefix}grid-cols-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
    .#{$prefix}col-span-#{$i} {
      grid-column: span #{$i} / span #{$i};
    }
    .#{$prefix}col-start-#{$i} {
      grid-column-start: #{$i};
    }
    .#{$prefix}col-end-#{$i} {
      grid-column-end: #{$i};
    }
  }

  
  @for $i from 1 through 6 {
    .#{$prefix}grid-rows-#{$i} {
      grid-template-rows: repeat(#{$i}, 1fr);
    }
    .#{$prefix}row-span-#{$i} {
      grid-row: span #{$i} / span #{$i};
    }
    .#{$prefix}row-start-#{$i} {
      grid-row-start: #{$i};
    }
    .#{$prefix}row-end-#{$i} {
      grid-row-end: #{$i};
    }
  }

  
}


@include generar-grid-classes();


@each $bp-name, $bp-value in $breakpoints {
  @if $bp-value > 0 {
    @include respond-to($bp-name) {
      @include generar-grid-classes("#{$bp-name}\\:");
    }
  }
}